#!/usr/bin/env python
# wrapper for todoist
# todo3.py --date ''

import subprocess


def get_projects():
    cmd = 'todoist projects | fzf'

    project_ids = []
    try:
        project_id = subprocess.check_output(cmd, shell=True)
        project_id = project_id.decode('utf-8').strip()
        print(project_id)
        project_number, project_name = project_id.split(' ', 1)
        project_ids.append(project_number)

    except subprocess.CalledProcessError:
        pass

    return project_ids


def get_labels():
    cmd = 'todoist labels | fzf'

    label_ids = []
    while True:
        try:
            label_id = subprocess.check_output(cmd, shell=True)
            label_id = label_id.decode('utf-8').strip()
            label_number, label_name = label_id.split(' ', 1)
            label_ids.append(label_number)

        except subprocess.CalledProcessError:
            break

    return label_ids


def main():
    question1 = 'What is a task to accomplish? \n'
    task = input(question1)

    question2 = 'Is there a due date? (N if no)\n'
    due_date_input = input(question2).strip()

    due_date = None
    if due_date_input != 'N' and due_date_input != 'n':
        due_date = due_date_input

    label_ids = get_labels()
    label_flag_args = ','.join(label_ids)

    project_ids = get_projects()
    project_flag_args = ','.join(project_ids)

    cmd = 'todoist add'

    # Labels
    if len(label_ids) > 0:
        label_flag = '-L ' + label_flag_args
        cmd = cmd + ' ' + label_flag

    # Projects
    if len(project_ids) > 0:
        project_flag = '-P ' + project_flag_args
        cmd = cmd + ' ' + project_flag

    if due_date:
        cmd = cmd + ' ' + '--date ' + due_date

    cmd = cmd + ' ' + "'" + task + "'"

    print(cmd)
    subprocess.check_call(cmd, shell=True)


if __name__ == '__main__':
    main()


